{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n  render() {\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    return __jsx(Query, {\n      query: GET_PRODUCTS_BY_ID,\n      variables: {\n        ids: store.get('ids')\n      }\n    }, ({\n      data,\n      loading,\n      error\n    }) => {\n      if (loading) return __jsx(\"div\", null, \"Loading..\");\n      if (error) return __jsx(\"div\", null, error.message);\n      console.log(data);\n      return __jsx(Card, null, __jsx(ResourceList, {\n        showHeaderresourceName: {\n          singular: 'Product',\n          plural: 'Products'\n        },\n        items: data.nodes,\n        renderItem: item => {\n          const media = __jsx(Thumbnail, {\n            source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n            alt: item.images.edges[0] ? item.images.edges[0].node.altText : ''\n          });\n\n          const price = item.variants.edges[0].node.price;\n          return __jsx(ResourceList.Item, {\n            id: item.id,\n            media: media,\n            accessibilityLabel: `View details for ${item.title}`\n          }, __jsx(Stack, null, __jsx(Stack.Item, {\n            fill: true\n          }, __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, item.title))), __jsx(Stack.Item, null, __jsx(\"p\", null, \"$\", price)), __jsx(Stack.Item, null, __jsx(\"p\", null, \"Expires on \", twoWeeksFromNow, \" \"))));\n        }\n      }));\n    });\n  }\n\n}\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/travisramos/practice/spotifyPrac/components/ResourceList.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ResourceListWithProducts","React","Component","render","twoWeeksFromNow","Date","now","toDateString","ids","get","data","loading","error","message","console","log","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+CC,SAA/C,QAAgE,kBAAhE;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,MAAMC,kBAAkB,GAAGR,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA/B;;AA6BA,MAAMS,wBAAN,SAAuCC,KAAK,CAACC,SAA7C,CAAuD;AACnDC,EAAAA,MAAM,GAAG;AACL,UAAMC,eAAe,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa,OAAtB,EAA+BC,YAA/B,EAAxB;AACA,WACI,MAAC,KAAD;AAAO,MAAA,KAAK,EAAER,kBAAd;AAAkC,MAAA,SAAS,EAAE;AAAES,QAAAA,GAAG,EAAEV,KAAK,CAACW,GAAN,CAAU,KAAV;AAAP;AAA7C,OACK,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,KAAD,KAA8B;AAC3B,UAAID,OAAJ,EAAa,OAAO,+BAAP;AACb,UAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACC,OAAZ,CAAP;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,aACI,MAAC,IAAD,QACI,MAAC,YAAD;AACA,QAAA,sBAAsB,EAAE;AAAEM,UAAAA,QAAQ,EAAE,SAAZ;AAAuBC,UAAAA,MAAM,EAAE;AAA/B,SADxB;AAEA,QAAA,KAAK,EAAEP,IAAI,CAACQ,KAFZ;AAGA,QAAA,UAAU,EAAEC,IAAI,IAAI;AAChB,gBAAMC,KAAK,GACP,MAAC,SAAD;AACA,YAAA,MAAM,EACFD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IACEH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BC,WAD5B,GAEE,EAJN;AAMA,YAAA,GAAG,EACCL,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IACEH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BE,OAD5B,GAEE;AATN,YADJ;;AAcA,gBAAMC,KAAK,GAAGP,IAAI,CAACQ,QAAL,CAAcL,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BG,KAA1C;AACA,iBACI,MAAC,YAAD,CAAc,IAAd;AACA,YAAA,EAAE,EAAEP,IAAI,CAACS,EADT;AAEA,YAAA,KAAK,EAAER,KAFP;AAGA,YAAA,kBAAkB,EAAG,oBAAmBD,IAAI,CAACU,KAAM;AAHnD,aAKI,MAAC,KAAD,QACI,MAAC,KAAD,CAAO,IAAP;AAAY,YAAA,IAAI;AAAhB,aACI,kBACI,MAAC,SAAD;AAAW,YAAA,SAAS,EAAC;AAArB,aACKV,IAAI,CAACU,KADV,CADJ,CADJ,CADJ,EAQI,MAAC,KAAD,CAAO,IAAP,QACI,sBAAKH,KAAL,CADJ,CARJ,EAWI,MAAC,KAAD,CAAO,IAAP,QACI,gCAAetB,eAAf,MADJ,CAXJ,CALJ,CADJ;AAuBH;AA1CD,QADJ,CADJ;AAgDH,KArDL,CADJ;AAyDH;;AA5DkD;;AA+DvD,eAAeJ,wBAAf","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n    render() {\n        const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString()\n        return (\n            <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\n                {({ data, loading, error }) => {\n                    if (loading) return <div>Loading..</div>;\n                    if (error) return <div>{error.message}</div>;\n                    console.log(data);\n                    return (\n                        <Card>\n                            <ResourceList\n                            showHeaderresourceName={{ singular: 'Product', plural: 'Products' }}\n                            items={data.nodes}\n                            renderItem={item => {\n                                const media =(\n                                    <Thumbnail\n                                    source={\n                                        item.images.edges[0]\n                                        ? item.images.edges[0].node.originalSrc\n                                        : ''\n                                    }\n                                    alt={\n                                        item.images.edges[0]\n                                        ? item.images.edges[0].node.altText\n                                        : ''\n                                    }\n                                    />\n                                );\n                                const price = item.variants.edges[0].node.price;\n                                return (\n                                    <ResourceList.Item\n                                    id={item.id}\n                                    media={media}\n                                    accessibilityLabel={`View details for ${item.title}`}\n                                    >\n                                        <Stack>\n                                            <Stack.Item fill>\n                                                <h3>\n                                                    <TextStyle variation=\"strong\">\n                                                        {item.title}\n                                                    </TextStyle>\n                                                </h3>\n                                            </Stack.Item>\n                                            <Stack.Item>\n                                                <p>${price}</p>\n                                            </Stack.Item>\n                                            <Stack.Item>\n                                                <p>Expires on {twoWeeksFromNow} </p>\n                                            </Stack.Item>\n                                        </Stack>\n                                    </ResourceList.Item>\n                                );\n                            }}\n                            />\n                        </Card>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}